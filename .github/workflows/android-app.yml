name: Build android app

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master
      - stable
jobs:
  #this it tests jobs, called build as it's required name for PR
  build:
    name: Build
    runs-on:            ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository }}/opencv-builder:4.11.0
    steps:

      - name:           Checkout Sources
        uses:           actions/checkout@v4.1.1
        with:
          fetch-depth:  50
          submodules:   'recursive'

      - name:           Install System Dependencies (Linux)
        run:            |
          sudo apt-get update
          sudo apt-get install -y clang libclang-dev

      - name:           Install Rust stable toolchain
        uses:           dtolnay/rust-toolchain@stable

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     false

      - name:           Install additional rust targets
        run:            rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android
      
      - name:           Install Android Dependencies
        uses:           ./.github/actions/install-android-dep

      # - name:           Rust Cache
      #   uses:           Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
      #   with:
      #     workspaces:   rust -> rust/target

      # - name:           Gradle Cache
      #   uses:           actions/cache@v3
      #   with:
      #     path:         |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name:           Build
        run:            |
          ./gradlew :android:testDebugUnitTest

  makeapk:
    name: Build unsigned APKs
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository }}/opencv-builder:4.11.0
    # if: github.ref == ' refs/head/main'
    steps:

      - name:           Checkout Sources
        uses:           actions/checkout@v4.1.1
        with:
          fetch-depth:  50
          submodules:   'recursive'

      - name:           Install System Dependencies (Linux)
        run:            |
          sudo apt-get update
          sudo apt-get install -y clang libclang-dev

      - name:           Install Rust stable toolchain
        uses:           dtolnay/rust-toolchain@stable

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     false

      - name:           Install additional rust targets
        run:            rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name:           Install Android Dependencies
        uses:           ./.github/actions/install-android-dep

      # - name:           Rust Cache
      #   uses:           Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
      #   with:
      #     workspaces:   rust -> rust/target

      # - name:           Gradle Cache
      #   uses:           actions/cache@v3
      #   with:
      #     path:         |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name:           Assemble unsigned debug apk
        run:            |
          ./gradlew clean assembleDebug --stacktrace

      - name:           Upload Gplay unsigned APKs
        uses:           actions/upload-artifact@v4
        with:
          name:         signer-debug-unsigned
          path:         |
            android/build/outputs/apk/debug/*.apk
