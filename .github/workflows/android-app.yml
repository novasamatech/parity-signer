name: Build android app

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master
      - stable
jobs:
  #this it tests jobs, called build as it's required name for PR
  build:
    name: Build
    runs-on:            ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository }}/opencv-builder:4.11.0
    steps:

      - name:           Checkout Sources
        uses:           actions/checkout@v4.1.1
        with:
          fetch-depth:  50
          submodules:   'recursive'

      - name:           Install Rust stable toolchain
        uses:           dtolnay/rust-toolchain@stable

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     false

      - name:           Install additional rust targets
        run:            rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name:           Set up JDK environment
        uses:           actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Debug Android SDK setup
        run: |
          echo "Current working directory: $(pwd)"
          echo "ANDROID_SDK_ROOT: ${ANDROID_SDK_ROOT:-not set}"
          echo "Listing root directory structure:"
          ls -la /
          echo "Checking for Android SDK directories:"
          ls -la /usr/local/lib/android || echo "No /usr/local/lib/android"
          ls -la /opt/android-sdk || echo "No /opt/android-sdk"
          echo "Environment variables:"
          env | grep -i android

      - name:           Install NDK
        run:            echo "y" | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --install "ndk;24.0.8215888" --sdk_root=${ANDROID_SDK_ROOT}

      # - name:           Rust Cache
      #   uses:           Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
      #   with:
      #     workspaces:   rust -> rust/target

      # - name:           Gradle Cache
      #   uses:           actions/cache@v3
      #   with:
      #     path:         |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name:           Build
        run:            |
          ./gradlew :android:testDebugUnitTest

  makeapk:
    name: Build unsigned APKs
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository }}/opencv-builder:4.11.0
    # if: github.ref == ' refs/head/main'
    steps:

      - name:           Checkout Sources
        uses:           actions/checkout@v4.1.1
        with:
          fetch-depth:  50
          submodules:   'recursive'

      - name:           Install Rust stable toolchain
        uses:           dtolnay/rust-toolchain@stable

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     false

      - name:           Install additional rust targets
        run:            rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name:           Set up JDK environment
        uses:           actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17


      - name: Debug Android SDK setup
        run: |
          echo "Current working directory: $(pwd)"
          echo "ANDROID_SDK_ROOT: ${ANDROID_SDK_ROOT:-not set}"
          echo "Listing root directory structure:"
          ls -la /
          echo "Checking for Android SDK directories:"
          ls -la /usr/local/lib/android || echo "No /usr/local/lib/android"
          ls -la /opt/android-sdk || echo "No /opt/android-sdk"
          echo "Environment variables:"
          env | grep -i android

      - name:           Install NDK
        run:            echo "y" | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --install "ndk;24.0.8215888" --sdk_root=${ANDROID_SDK_ROOT}

      # - name:           Rust Cache
      #   uses:           Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
      #   with:
      #     workspaces:   rust -> rust/target

      # - name:           Gradle Cache
      #   uses:           actions/cache@v3
      #   with:
      #     path:         |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name:           Assemble unsigned debug apk
        run:            |
          ./gradlew clean assembleDebug --stacktrace

      - name:           Upload Gplay unsigned APKs
        uses:           actions/upload-artifact@v4
        with:
          name:         signer-debug-unsigned
          path:         |
            android/build/outputs/apk/debug/*.apk
