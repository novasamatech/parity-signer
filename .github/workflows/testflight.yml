name: Distribute TestFlight Build

on:
 workflow_dispatch:

jobs:
  distribute_testflight:
    if: contains('["krodak","prybalko", "montekki"]', github.actor)
    runs-on:                  macos-12
    name:                     Distribute TestFlight Build

    steps:
      - name:                 Cancel Previous Runs
        uses:                 styfle/cancel-workflow-action@bb6001c4ea612bf59c3abfc4756fbceee4f870c7 # 0.10.0
        with:
          access_token:       ${{ github.token }}

      - name:                 Checkout repository
        uses:                 actions/checkout@v3.0.2

      - name:                 Setup Ruby
        uses:                 ruby/setup-ruby@v1
        with:
          ruby-version:       '2.7'
          bundler-cache:      true

      - name:                 Setup - Xcode
        run:                  sudo xcode-select -switch '/Applications/Xcode_14.0.app/Contents/Developer' && /usr/bin/xcodebuild -version

      - name:                 Install dependencies
        run:                  |
          brew update
          brew install swiftgen
          brew install swiftformat

      - name:                 Install Rust aarch64-apple-ios target
        uses:                 actions-rs/toolchain@v1.0.7
        with:
          profile:            minimal
          toolchain:          stable
          target:             aarch64-apple-ios
          components:         rust-std
          override:           true

      - name:                 Install Rust x86_64-apple-ios target
        uses:                 actions-rs/toolchain@v1.0.7
        with:
          profile:            minimal
          toolchain:          stable
          target:             x86_64-apple-ios
          components:         rust-std
          override:           true

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.20.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     true

      - name:                 Rust Cache
        uses:                 Swatinem/rust-cache@6720f05bc48b77f96918929a9019fb2203ff71f8 # v2.0.0
        with:
          workspaces:         rust -> rust/target

      - name:                 Install the Apple certificate and provisioning profile
        env:
          IOS_CERT_BASE64:    ${{ secrets.IOS_CERT_BASE64 }}
          IOS_CERT_PASSWORD:  ${{ secrets.IOS_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD:  ${{ secrets.KEYCHAIN_PASSWORD }}
        run:                  |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$IOS_CERT_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$IOS_CERT_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          echo "KEYCHAIN_PATH_ENV=$(echo $KEYCHAIN_PATH)" >> $GITHUB_ENV

      - name:                 Distribute TestFlight build
        env:
          ASC_KEY_ID:         ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID:      ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_BASE64:     ${{ secrets.ASC_KEY_BASE64 }}
          BUILD_NUMBER:       $GITHUB_RUN_ID
          KEYCHAIN_PATH:      ${{ env.KEYCHAIN_PATH_ENV }}
          KEYCHAIN_PASSWORD:  ${{ secrets.KEYCHAIN_PASSWORD }}
        run:                  |
          cd ios
          bundle exec fastlane distribute_testflight
