name:                         E2E Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master
      - stable

jobs:
  check:
    name:                     Check on MacOS
    runs-on:                  macos-15
    steps:

      - name:                 Checkout sources
        uses:                 actions/checkout@v4.1.1
        with:
          fetch-depth:        50
          submodules:         'recursive'

      - name:                 Setup Ruby
        uses:                 ruby/setup-ruby@v1
        with:
          ruby-version:       '2.7'
          bundler-cache:      false

      - name:                 Setup - Xcode
        uses:                 maxim-lobanov/setup-xcode@v1
        with:
          xcode-version:      16

      - name:                 Install dependencies
        run:                  |
          brew install sourcery
          bundle install

      - name: Get cached Swift Packages managed by Xcode
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData/**/SourcePackages/
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name:                 Install Rust targets
        uses:                 dtolnay/rust-toolchain@stable
        with:
          targets:            x86_64-apple-ios,aarch64-apple-ios
          components:         rust-std

      - name:                 Install uniffi_bindgen
        uses:                 actions-rs/install@v0.1
        with:
          crate:              uniffi_bindgen
          version:            0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache:     true

      - name:                 Rust Cache
        uses:                 Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
        with:
          workspaces:         rust -> rust/target

      - name:                 Build iOS and run tests
        shell:                bash
        run:                  |
          cd ios
          bundle exec fastlane run_unit_tests
