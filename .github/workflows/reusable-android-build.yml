name: Reusable workflow for building Android app

on:
  workflow_call:
    inputs:
      is-release:
        required: true
        type: boolean
        default: false
    outputs:
      build-tool-version:
        description: "build-tool version"
        value: ${{ jobs.build-apk.outputs.build-tool-version }}

jobs:
  build-apk:
    name: Build APKs
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository }}/opencv-builder:4.11.0
    outputs:
      build-tool-version: ${{ steps.read-build-tool-version.outputs.build-tool-version }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install System Dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libclang-dev

      - name: Install Android Dependencies
        uses: ./.github/actions/install-android-dep

      - name: Read build-tool version
        id: read-build-tool-version
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls $ANDROID_SDK_ROOT/build-tools | sort -V | tail -n1)
          echo "Build tool version is: ${BUILD_TOOL_VERSION}"
          echo "build-tool-version=${BUILD_TOOL_VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install uniffi_bindgen
        uses: actions-rs/install@v0.1
        with:
          crate: uniffi_bindgen
          version: 0.22.0 # Must be in sync with version in Cargo.toml
          use-tool-cache: true

      - name: Install additional rust targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name: Rust Cache
        uses: Swatinem/rust-cache@27b8ea9368cf428f0bfe41b0876b1a7e809d9844 # v2.7.7
        with:
          workspaces: rust -> rust/target

      - name: Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble debug apk
        if: ${{ inputs.is-release == false }}
        run: |
          ./gradlew clean assembleDebug --stacktrace

      - name: List debug APKs
        if: ${{ inputs.is-release == false }}
        run: |
          ls android/build/outputs/apk/debug

      - name: Upload debug APKs
        if: ${{ inputs.is-release == false }}
        uses: actions/upload-artifact@v4
        with:
          name: polkadot-vault-apk
          path: android/build/outputs/apk/debug/*.apk

      - name: Assemble release apk
        if: ${{ inputs.is-release == true }}
        run: |
          ./gradlew clean assembleRelease --stacktrace

      - name: List release APKs
        if: ${{ inputs.is-release == true }}
        run: |
          ls android/build/outputs/apk/release

      - name: Upload release APKs
        if: ${{ inputs.is-release == true }}
        uses: actions/upload-artifact@v4
        with:
          name: polkadot-vault-apk
          path: android/build/outputs/apk/release/*.apk


