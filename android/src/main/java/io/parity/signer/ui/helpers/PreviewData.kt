package io.parity.signer.ui.helpers

import io.parity.signer.components.base.RichTextString
import io.parity.signer.components.networkicon.dot.DotIconConstants
import io.parity.signer.uniffi.Identicon


object PreviewData {
	object Identicon {
		val dotIcon = io.parity.signer.uniffi.Identicon.Dots(identity = DotIconConstants.previewAliceSeed)
		val blockiesIcon = io.parity.signer.uniffi.Identicon.Blockies(identity = "0x7204ddf9dc5f672b64ca6692da7b8f13b4d408e7")
		val jdenticonIcon = io.parity.signer.uniffi.Identicon.Jdenticon(identity = "8PegJD6VsjWwinrP6AfgNqejWYdJ8KqF4xutpyq7AdFJ3W5")
	}

	///Bytes to be encoded to qr code to show it
	val exampleQRData: List<UByte>  = listOf<Int>(60, 115, 118, 103, 32, 118, 105, 101, 119, 66, 111, 120, 61, 34, 45, 49, 48, 32, 45, 49, 48, 32, 50, 48, 32, 50, 48, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 50, 48, 48, 48, 47, 115, 118, 103, 34, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 48, 34, 32, 102, 105, 108, 108, 61, 34, 35, 101, 101, 101, 101, 101, 101, 34, 32, 114, 61, 34, 49, 48, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 45, 55, 46, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 50, 55, 53, 55, 101, 55, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 45, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 50, 48, 48, 56, 52, 53, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 45, 53, 46, 54, 50, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 97, 49, 49, 50, 51, 97, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 45, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 50, 49, 52, 53, 48, 56, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 45, 49, 46, 56, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 102, 50, 56, 99, 97, 49, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 48, 34, 32, 102, 105, 108, 108, 61, 34, 35, 97, 49, 49, 50, 51, 97, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 50, 55, 53, 55, 101, 55, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 49, 46, 56, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 50, 48, 48, 56, 52, 53, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 45, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 53, 46, 54, 50, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 56, 99, 98, 97, 102, 50, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 55, 46, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 102, 50, 56, 99, 98, 101, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 52, 53, 51, 54, 48, 56, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 53, 46, 54, 50, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 56, 99, 101, 48, 102, 50, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 49, 50, 97, 49, 55, 56, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 49, 46, 56, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 97, 49, 49, 50, 50, 101, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 48, 34, 32, 102, 105, 108, 108, 61, 34, 35, 56, 99, 101, 48, 102, 50, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 54, 46, 52, 57, 53, 49, 57, 48, 54, 34, 32, 99, 121, 61, 34, 45, 51, 46, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 102, 50, 56, 99, 98, 101, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 45, 49, 46, 56, 55, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 52, 53, 51, 54, 48, 56, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 51, 46, 50, 52, 55, 53, 57, 53, 51, 34, 32, 99, 121, 61, 34, 45, 53, 46, 54, 50, 53, 34, 32, 102, 105, 108, 108, 61, 34, 35, 56, 99, 98, 97, 102, 50, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 48, 34, 32, 99, 121, 61, 34, 48, 34, 32, 102, 105, 108, 108, 61, 34, 35, 48, 56, 48, 99, 52, 53, 34, 32, 114, 61, 34, 49, 46, 53, 54, 50, 53, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 110, 111, 110, 101, 34, 47, 62, 10, 60, 47, 115, 118, 103, 62).map {it.toUByte()}

	//represents bytes of bitmap image qr code
	val exampleQRImage: List<UByte>  = listOf<Int>(137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 196, 0, 0, 0, 196, 1, 3, 0, 0, 0, 250, 104, 28, 40, 0, 0, 0, 6, 80, 76, 84, 69, 0, 0, 0, 255, 255, 255, 165, 217, 159, 221, 0, 0, 2, 48, 73, 68, 65, 84, 120, 156, 237, 215, 205, 113, 237, 32, 12, 5, 96, 168, 0, 58, 112, 255, 101, 209, 129, 168, 192, 239, 147, 125, 243, 178, 201, 82, 204, 100, 17, 50, 215, 54, 58, 154, 209, 223, 65, 34, 253, 110, 63, 175, 253, 135, 252, 18, 164, 183, 54, 214, 140, 43, 230, 110, 45, 174, 117, 121, 141, 168, 71, 102, 52, 178, 152, 49, 246, 104, 123, 190, 130, 19, 8, 65, 164, 100, 183, 171, 177, 127, 191, 130, 35, 200, 30, 49, 87, 187, 118, 204, 214, 78, 34, 193, 188, 240, 218, 188, 211, 141, 20, 28, 64, 8, 218, 246, 184, 251, 136, 126, 243, 193, 247, 1, 36, 25, 130, 122, 223, 139, 51, 47, 67, 106, 145, 103, 205, 52, 187, 230, 8, 223, 207, 170, 71, 122, 67, 193, 164, 162, 160, 87, 166, 212, 82, 203, 122, 100, 72, 231, 224, 195, 154, 77, 82, 149, 141, 214, 19, 169, 77, 33, 50, 215, 245, 124, 62, 204, 192, 119, 193, 146, 214, 35, 194, 28, 83, 116, 177, 145, 68, 102, 251, 77, 227, 0, 130, 124, 236, 138, 19, 15, 213, 111, 116, 53, 164, 127, 0, 225, 131, 190, 183, 240, 124, 204, 157, 39, 88, 27, 172, 71, 216, 103, 89, 103, 109, 11, 144, 154, 132, 143, 7, 118, 133, 136, 252, 237, 225, 77, 37, 174, 204, 172, 223, 9, 164, 231, 188, 240, 39, 161, 116, 208, 63, 218, 21, 7, 16, 249, 116, 176, 166, 238, 96, 131, 135, 147, 19, 136, 105, 67, 94, 136, 128, 152, 206, 99, 101, 223, 180, 115, 113, 210, 47, 71, 236, 85, 44, 158, 40, 157, 178, 232, 236, 127, 24, 82, 138, 244, 48, 145, 146, 137, 182, 140, 231, 243, 139, 241, 165, 72, 150, 142, 221, 91, 219, 203, 150, 231, 132, 193, 31, 15, 106, 17, 6, 85, 77, 94, 169, 36, 233, 253, 64, 245, 136, 80, 133, 54, 201, 204, 116, 166, 245, 138, 172, 97, 57, 210, 25, 220, 99, 177, 234, 12, 107, 22, 62, 72, 235, 145, 249, 114, 2, 168, 96, 95, 187, 199, 131, 207, 119, 17, 98, 35, 204, 102, 98, 40, 160, 11, 138, 184, 131, 79, 229, 72, 150, 42, 57, 255, 148, 45, 12, 94, 252, 160, 82, 143, 152, 23, 110, 116, 146, 153, 124, 236, 20, 20, 242, 245, 160, 20, 113, 115, 200, 46, 78, 252, 166, 82, 175, 160, 90, 143, 232, 18, 230, 171, 137, 1, 200, 139, 49, 129, 199, 9, 228, 214, 33, 146, 230, 14, 239, 242, 54, 14, 15, 33, 170, 21, 218, 44, 166, 56, 90, 54, 95, 55, 226, 82, 36, 87, 26, 151, 212, 149, 23, 47, 243, 66, 212, 245, 200, 99, 81, 95, 50, 251, 132, 44, 175, 52, 53, 168, 114, 4, 203, 223, 146, 189, 98, 214, 9, 79, 32, 206, 148, 255, 140, 250, 59, 1, 167, 169, 203, 149, 67, 136, 229, 236, 178, 143, 34, 217, 54, 232, 28, 65, 120, 144, 252, 35, 48, 216, 245, 166, 79, 70, 107, 17, 18, 30, 232, 176, 38, 186, 226, 105, 27, 65, 183, 28, 249, 207, 16, 215, 98, 217, 12, 188, 252, 120, 80, 139, 252, 188, 254, 144, 95, 129, 252, 3, 117, 24, 116, 223, 174, 44, 31, 82, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130).map {it.toUByte()}

	val exampleMarkdownDocs: RichTextString = RichTextString("Same as the [`transfer`] call, but with a check that the transfer will not kill the\n origin account.\n\n 99% of the time you want [`transfer`] instead.\n\n [`transfer`]: struct.Pallet.html#method.transfer\n # <weight>\n - Cheaper than transfer because account cannot be killed.\n - Base Weight: 51.4 µs\n - DB Weight: 1 Read and 1 Write to dest (sender is in overlay already)\n #</weight>")

}


