plugins {
	id 'com.android.application'
	id 'kotlin-android'
	id 'org.mozilla.rust-android-gradle.rust-android'
	id 'idea'
}

apply plugin: 'kotlin-android'

android {
	compileSdk 32

	defaultConfig {
		applicationId "io.parity.signer"
		minSdk 23
		targetSdk 32
		versionCode 50100
		versionName "5.0.1"
		ndk {
			abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
		}

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables {
			useSupportLibrary true
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_11
		targetCompatibility JavaVersion.VERSION_11
	}
	kotlinOptions {
		jvmTarget = '11'
		useIR = true
	}
	buildFeatures {
		compose true
	}
	composeOptions {
		kotlinCompilerExtensionVersion compose_version
	}
	packagingOptions {
		resources {
			excludes += '/META-INF/{AL2.0,LGPL2.1}'
		}
		jniLibs {
			pickFirsts += ['lib/armeabi-v7a/libc++_shared.so', 'lib/arm64-v8a/libc++_shared.so', 'lib/x86/libc++_shared.so', 'lib/x86_64/libc++_shared.so']
		}
	}
	buildToolsVersion '31.0.0'
	compileSdk 32
	ndkVersion '24.0.8215888'
    namespace 'io.parity.signer'
}

android.applicationVariants.all { variant ->
	def t = tasks.register("generate${variant.name.capitalize()}UniFFIBindings", Exec) {
		workingDir "${project.projectDir}"
		// Runs the bindings generation, note that you must have uniffi-bindgen installed and in your PATH environment variable
		commandLine 'uniffi-bindgen', 'generate', "${workingDir}/../../rust/signer/src/signer.udl", '--language', 'kotlin', '--out-dir', "${buildDir}/generated/source/uniffi/${variant.name}/java"
	}
	variant.javaCompileProvider.get().dependsOn(t)
	def sourceSet = variant.sourceSets.find { it.name == variant.name }
	sourceSet.java.srcDir new File(buildDir, "generated/source/uniffi/${variant.name}/java")
	// XXX: I've been trying to make this work but I can't, so the compiled bindings will show as "regular sources" in Android Studio.
	idea.module.generatedSourceDirs += file("${buildDir}/generated/source/uniffi/${variant.name}/java/uniffi")
}
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
	module = "../../rust/signer"
	targetDirectory = "../../rust/target"
	libname = "signer"
	targets = ["arm", "arm64", "x86_64"]
	apiLevel = 21
	profile = 'release'
	extraCargoBuildArguments = ["--locked"]
}

dependencies {

	implementation 'androidx.core:core-ktx:1.7.0'
	implementation 'androidx.appcompat:appcompat:1.4.1'
	implementation 'com.google.android.material:material:1.5.0'
	implementation "androidx.compose.ui:ui:$compose_version"
	implementation 'androidx.compose.material:material:1.1.1'
	implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
	implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
	implementation 'androidx.activity:activity-compose:1.4.0'
	implementation 'androidx.compose.runtime:runtime-livedata:1.1.1'
	implementation 'androidx.security:security-crypto:1.1.0-alpha03'
	implementation 'androidx.biometric:biometric:1.1.0'
	implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
	implementation 'androidx.camera:camera-core:1.0.2'
	implementation 'androidx.camera:camera-lifecycle:1.0.2'
	implementation 'androidx.camera:camera-view:1.1.0-beta01'
	implementation 'androidx.camera:camera-camera2:1.1.0-beta01'
	implementation 'com.google.mlkit:barcode-scanning:17.0.2'
	implementation "androidx.compose.material:material-icons-extended:$compose_version"
	implementation 'com.halilibo.compose-richtext:richtext-commonmark-android:0.11.0'
	implementation 'com.halilibo.compose-richtext:richtext-ui-material-android:0.11.0'
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.ext:junit:1.1.3'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
	androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
	debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
	implementation "androidx.core:core-ktx:1.7.0"
	implementation "net.java.dev.jna:jna:5.11.0@aar"
}

preBuild.dependsOn "cargoBuild"
